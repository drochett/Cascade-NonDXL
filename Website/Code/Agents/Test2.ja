<?xml version="1.0" encoding="UTF-8"?>
<agent xmlns="http://www.lotus.com/dxl" name="Test2" hide="v3" publicaccess="false">
  <trigger type="actionsmenu"/>
  <documentset type="runonce"/>
  <code event="action">
    <javaproject class="JavaAgent.class">
      <java name="JavaAgent.java">import lotus.domino.*;
import com.rest.api.*;

public class JavaAgent extends AgentBase {

    public void NotesMain() {

      try {
          Session session = getSession();
          AgentContext agentContext = session.getAgentContext();
          System.out.println("Java Agent Starting");
          // (Your code goes here)
          String site = "CascadeCorporation";
          String user = "Daryl.Rochette";
          String password = "abcDEF123";
          String baseUrl = "https://secure.p03.eloqua.com/API/REST/2.0";
          System.out.println("Setup new Client");
          
          Client client = new Client(site + "\\" + user, password, baseUrl);
          System.out.println(client.toString());
          
          Response response = client.get("/data/contact/2");
                   
          System.out.println(response.statusCode);
          System.out.println(response.exception);
          
          String body = "{\"fieldValues\": [{\"type\": \"FieldValue\",\"id\": \"1022\",\"value\": \"Fredrick\"},{\"type\": \"FieldValue\",\"id\": \"1023\",\"value\": \"Smithson\"},{\"type\": \"FieldValue\",\"id\": \"1024\",\"value\": \"fred.smith@fedex.com\"},{\"type\": \"FieldValue\",\"id\": \"1026\",\"value\": \"99999\"},{\"type\": \"FieldValue\",\"id\": \"1266\",\"value\": \"Recycling Industry\"},{\"type\": \"FieldValue\",\"id\": \"1267\",\"value\": \"This is a question I guess\"}]}";
          System.out.println(body);
          
          Response response2 = client.post("/data/form/83", body);
          
          System.out.println(response2.exception);
          System.out.println(response2.errorStream);
          
          System.out.println("Java agent Completed!");
      } catch(Exception e) {
          e.printStackTrace();
       }
   }
}</java>
      <java name="com/rest/api/Client.java">package com.rest.api;
import java.net.URL;
//import java.net.HttpURLConnection;
import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLContext;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.OutputStream;


public class Client 
{
	private String _authToken;
	private String _baseUrl;
	
	
	public Client(String user, String password, String url) 
	{
		_baseUrl = url;		

		String authString = user + ":" + password;
		_authToken = "Basic " + javax.xml.bind.DatatypeConverter.printBase64Binary(authString.getBytes());	        
	}
	
	public Response get(String uri)
	{
		return this.execute(uri, "GET", null);
	}
	
	public Response post(String uri, String body)
	{
		return this.execute(uri, "POST", body);
	}
	
	public Response put(String uri, String body)
	{
		return this.execute(uri, "PUT", body);
	}
	
	public void delete(String uri)
	{
		this.execute(uri, "DELETE", null);
	}
	
	public Response execute(String uri, String method, String body) 
	{
		Response response = new Response();

		try 
		{
			URL url = new URL(_baseUrl + uri);
			HttpsURLConnection conn = (HttpsURLConnection) url.openConnection();
			//System.out.println(conn.);
			conn.setInstanceFollowRedirects(false); 
			conn.setRequestMethod(method); 
			conn.setRequestProperty("Content-Type", "application/json"); 
	        conn.setRequestProperty("Authorization", _authToken);
	        
	        SSLContext sc = SSLContext.getInstance("TLSv1.2");
	        // Init the SSLContext with a TrustManager[] and SecureRandom()
	        sc.init(null, null, new java.security.SecureRandom()); 
	        
	        conn.setSSLSocketFactory(sc.getSocketFactory());
	        
	        if (method == "POST" || method == "PUT") 
	        {
				conn.setDoOutput(true); 
	        	final OutputStream os = conn.getOutputStream();
                os.write(body.getBytes());
                os.flush();
                os.close();
	        }
	        
	        InputStream is = conn.getInputStream(); 
	        BufferedReader rd = new BufferedReader(new InputStreamReader( is));

	        String line;
	        while ((line = rd.readLine()) != null) 
	        {
	            response.body += line;
	        }	        
	        rd.close();

	        response.statusCode = conn.getResponseCode(); 
	        response.errorStream = conn.getErrorStream().toString();
	        conn.disconnect(); 
		} 
		catch (Exception e) 
		{
			response.exception = e.getMessage();
		}
        return response;
	}
}</java>
      <java name="com/rest/api/Response.java">package com.rest.api;

public class Response {
	public int statusCode;
	public String body = "";
	public String exception;
	public String errorStream;
}
</java>
    </javaproject>
  </code>
  <item name="$JavaCompilerSource">
    <text>1.3</text>
  </item>
  <item name="$JavaCompilerTarget">
    <text>1.2</text>
  </item>
  <item name="$POID">
    <datetime>20190124T101955,93-08</datetime>
  </item>
</agent>