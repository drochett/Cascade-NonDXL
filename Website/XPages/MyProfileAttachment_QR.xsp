<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core" xmlns:xc="http://www.ibm.com/xsp/custom"
	xmlns:debug="http://www.openntf.org/xsp/debugtoolbar" xmlns:xe="http://www.ibm.com/xsp/coreex">

	

	<xp:this.afterPageLoad><![CDATA[#{javascript:dBar.info("Entering afterPageLoad");
importPackage(com.cascorp);
var srlNbr = sessionScope.serialNbr;
var mhpItem = sessionScope.mhpItem;
var region = sessionScope.Region;
var hostURL = configBean.getValue("HostURL");
sessionScope.nextPage= hostURL+sessionScope.LanguageURL+"MyAttachments";
if (sessionScope.newAttachment!=true || sessionScope.viaQR!=true){
	try{
		//sessionScope.serialNbr = document1.getItemValueString("serialNbr");
		//sessionScope.mhpItem = document1.getItemValueString("modelNbr");
		srlNbr = sessionScope.serialNbr;
		var mhpItem = sessionScope.mhpItem;
	//get iconData
		var funct= mhpItem.slice(mhpItem.indexOf("-")+1,mhpItem.indexOf("-")+4);
		var sizeGen = mhpItem.slice(0,mhpItem.indexOf("-"));
		dBar.info("function="+funct+sizeGen);
		dBar.info("srlNbr="+srlNbr);
		getComponent("serialNumber").setValue(srlNbr);
		getComponent("modelNbr").setValue(mhpItem);
		getComponent("icon").setValue(funct+sizeGen);
		//sessionScope.remove("srlNbr");
		//dBar.info("srlNbr to search: "+srlNbr);
		//dBar.info("region to use for search: "+region);
		acctNbr = jdeBean.getAcctNbr(srlNbr, region)
		dBar.info("account Nbr for " + srlNbr + " is "+acctNbr)
		//need to get information regarding the dealer that attachment 
		//was originally shipped to
		/*
		DealerNameField
		DealerAddressField
		DealerCityField
		DealerStateField
		DealerAddressZip
		DealerCountryField
		*/
		returnList = jdeBean.getAcctDetails(acctNbr, region);
		dBar.info("returnList.getCustName()= "+returnList.getCustName());
		dBar.info("values are:" + returnList.getCustName() + ":["
									+ returnList.getAcctType() + "]"
									+ returnList.getCustLocation()+ "[1: "
									+ returnList.getAddress1()+"] 2: "
									+ returnList.getAddress2()+"[3:"
									+ returnList.getAddress3()+"]"
									+ returnList.getCustCity()
									+ returnList.getCustState()
									+ returnList.getCustZip()
									+ "  CUST COUNTRY CODE  "
									+ returnList.getCustCountryCode());
		
		if (returnList.getCustName() == null){
			getComponent("DealerNameField").setValue("Dealer not found");
		}else{
			//need to bring all addresses together
			var dealerAddress
			if(returnList.getAddress2().trim() == "" + returnList.getAddress3().trim()==""){
				dealerAddress = returnList.getAddress1();
			}else if(returnList.getAddress3().trim()==""){
				dealerAddress = returnList.getAddress1() +", "+ returnList.getAddress2();
			} else {
				dealerAddress = returnList.getAddress1() +", "+ returnList.getAddress2() +", "+ returnList.getAddress3();
			}
			getComponent("DealerNameField").setValue(returnList.getCustName());
			getComponent("DealerAddressField").setValue(dealerAddress);
			getComponent("DealerCityField").setValue(returnList.getCustCity());
			getComponent("DealerStateField").setValue(returnList.getCustState());
			getComponent("DealerAddressZip").setValue(returnList.getCustZip());
			getComponent("DealerCountryField").setValue(returnList.getCustCountryCode());
		}
	} catch(e){
		dBar.error("Error in tab1 afterPageLoad: " + e.toString());
		println("ccDataEntry---username " + session.getEffectiveUserName() + "--> Error in tab1 afterPageLoad: " + e.toString());
	}
}else{

}}]]></xp:this.afterPageLoad>

	<xp:this.data>
		<xp:dominoDocument var="document1"
			databaseName="#{javascript:configBean.UserprofilesDbPath}"
			formName="Attachment">
		</xp:dominoDocument>
	</xp:this.data>
	<xc:ccRestrictAccess></xc:ccRestrictAccess>
	<xc:ccLayout>
		<!--	bootstrap 2 column-->
		<xp:panel id="main" styleClass="container">
			<!--			banner image-->
			<xp:panel styleClass="row blue-header">
				<xp:panel styleClass="col-xs-12">
					<xp:image url="/attachment_lineup1170.png" id="image1"
						styleClass="img-responsive">
					</xp:image>
				</xp:panel>
			</xp:panel>
			<!--			MAIN CONTENT-->
			<xp:panel styleClass="row">
				<xp:panel styleClass="col-xs-12 col-sm-10 col-md-8" id="panel1">
					<!--				btn-group-->
					<xp:panel id="panelActionbar1">
						
						
						
						
						<xp:link escape="true"
							text="#{langBean.btnLabelSave}" id="link1"
							styleClass="btn btn-primary"
							rendered="#{javascript:sessionScope.newAttachment==true || sessionScope.viaQR==true}">
							<xp:eventHandler event="onclick"
								submit="true" refreshMode="complete">
								<xp:this.action><![CDATA[#{javascript:dBar.info("Entering Save button");
importPackage(com.cascorp);
var rtn = true
var util = new utilities()
var hostURL = configBean.getValue("HostURL");
var userAttachment;
sessionScope.nextURL= hostURL+sessionScope.LanguageURL+"MyAttachments";
dBar.info("newAttachment:---->>> " + sessionScope.newAttachment);
//check for username~attachmentName duplication need to set some data here so it gets to proper field
var msg=new javax.faces.application.FacesMessage();
var attachmentIdentifier:com.ibm.xsp.component.xp.XspInputText = getComponent("attachmentIdentifier");
var serialNumber:com.ibm.xsp.component.xp.XspInputText = getComponent("serialNumber");
//Done setting the data
//set up info needed for checking duplicates
var user = getComponent("owner").getValue();
var attachName=getComponent("attachmentIdentifier").getValue();
var serialNbr = getComponent("serialNumber").getValue();
if(attachName!=""||attachName!=null){
	userAttachment = user+"~"+attachName;
}else{
	userAttachment = "notAvaiable";
}
var userSerial = user+"~"+serialNbr;
//Done setting info needed
//get iconData
var mhpItem = document1.getItemValueString("modelNbr");
var funct= mhpItem.slice(mhpItem.indexOf("-")+1,mhpItem.indexOf("-")+4);
var sizeGen = mhpItem.slice(0,mhpItem.indexOf("-"));
dBar.info("function="+funct+sizeGen);
document1.replaceItemValue("icon",funct+sizeGen);
currentDocument.replaceItemValue("icon",funct+sizeGen);
//end of iconData
//check for duplicates
rtn = utilBean.checkAttachmentName(userAttachment, userSerial)
dBar.info("message is: "+ utilBean.checkAttachmentName(userAttachment, userSerial))
//done
dBar.info("rtn=="+rtn);
if(rtn==true){
	var doc = document1.getDocument(true);
	//doc.replaceItemValue("owner",user);
	var authitem:NotesItem = doc.replaceItemValue("owner", user );
	authitem.setAuthors(true);
	
	
	doc.save()
	dBar.info("ALL IS GOOD");
	sessionScope.serialNumber=null;
	sessionScope.mhpItem=null;
	sessionScope.serialNbr=null;
	dBar.info("sesScp serialNbr="+sessionScope.serialNbr)
	sessionScope.newAttachment=null;
	sessionScope.viaQR=null;
	return "xsp-success";
	view.postScript("window.open('"+sessionScope.nextURL+"')")
}else if (rtn==false){
	dBar.info(utilBean.getErrorMessages());
	errMsgArray = utilBean.getErrorMessages();
	dBar.info(errMsgArray.size());
	for(err in errMsgArray){
	//for (i=0; i < errMsgArray.size(); i++){
		dBar.info("err: "+ err.toString());
		if (err== "nameUsed"){
		 	//send message to XPXage
		 	dBar.info("write to error display for attachmentIdentifier")
			facesContext.addMessage(attachmentIdentifier.getClientId(facesContext) , msg(langBean.getValue("duplicateName")));
		}
			if(err=="serialUsed"){
				//send message to XPXage
				dBar.info("write to error display for serialNbr")
				facesContext.addMessage(serialNumber.getClientId(facesContext) , msg(langBean.getValue("duplicateSerial")));
		}
	}
	
	return "xsp-failure";
}
}]]></xp:this.action>
							</xp:eventHandler>
						</xp:link>

						
						<xp:button id="Save"
							styleClass="btn btn-primary"
							value="#{langBean.btnLabelSave}">
							<xp:eventHandler event="onclick"
								submit="true" refreshMode="complete" immediate="false"
								save="true">
								<xp:this.action><![CDATA[#{javascript:
											importPackage(com.cascorp);
	dBar.info("Submit to Eloqua");
	Eloqua.submitToEloqua(document1.getDocument());				
	sessionScope.editAttachment=null}]]></xp:this.action>
							</xp:eventHandler>
						</xp:button>
	
						<xp:button value="${langBean.btnLabelCancel}" id="cancel"
							rendered="#{javascript:document1.isEditable()}" styleClass="btn btn-primary">
							<xp:eventHandler event="onclick" submit="true"
								refreshMode="complete" immediate="true" save="false">
								<xp:this.action>

									<xp:actionGroup>


										<xp:executeScript>
											<xp:this.script><![CDATA[#{javascript:sessionScope.serialNumber=null;
sessionScope.mhpItem=null
sessionScope.serialNbr=null
sessionScope.newAttachment=null
sessionScope.viaQR=null}]]></xp:this.script>
										</xp:executeScript>
										<xp:openPage
											name="/MyProfileAttachmentsView.xsp">
										</xp:openPage>


									</xp:actionGroup>
								</xp:this.action></xp:eventHandler>
						</xp:button>
						
						<xp:button value="${langBean.btnLabelDelete}" id="delete" styleClass="btn btn-primary">
							<xp:this.rendered><![CDATA[#{javascript:!document1.isNewNote() && document1.isEditable()}]]></xp:this.rendered>
							<xp:eventHandler event="onclick"
								submit="true" refreshMode="complete">
								
								<xp:this.script><![CDATA[
var confMsg = "#{javascript:langBean.btnDeleteConfirmAttach}" ;
var contDelete = XSP.confirm(confMsg);
return contDelete ;]]></xp:this.script>
								<xp:this.action>

									<xp:actionGroup>

										<xp:deleteDocument
											name="/MyProfileAttachmentsView.xsp"
											message="#{langBean.btnDeleteConfirmAttach}">
										</xp:deleteDocument>

										<xp:executeScript>
											<xp:this.script><![CDATA[#{javascript:sessionScope.serialNumber=null;
sessionScope.mhpItem=null
sessionScope.serialNbr=null
sessionScope.newAttachment=null}]]></xp:this.script>
										</xp:executeScript>
									</xp:actionGroup>
								</xp:this.action></xp:eventHandler>
						</xp:button>
						</xp:panel>
					<xp:br></xp:br>
					<!--					address tables-->
					<xp:panel id="panelAddress1">

						<xp:table styleClass="address-table">
							<xp:tr>
								<xp:panel tagName="th" styleClass="tableHeading">
									<xp:this.attrs>
										<xp:attr name="colspan" value="2">
										</xp:attr>
									</xp:this.attrs>
									<xp:text value="${langBean.titleAttachmentInformation}"
										id="label2">
									</xp:text>
								</xp:panel>
							</xp:tr>
							<xp:tr>
								<xp:td colspan="2">
									<xp:label rendered="#{javascript:currentDocument.isEditable()}">
										<span class="glyphicon glyphicon-asterisk icon-required"
											aria-hidden="true">
										</span>
									</xp:label>
									<xp:label value="${langBean.labelRequiredFields}" id="label1"
										rendered="#{javascript:currentDocument.isEditable()}" style="color:rgb(255,0,0)">
									</xp:label>
								</xp:td>
							</xp:tr>
							
						</xp:table>

					</xp:panel>
					<xp:panel id="panel2">

						<xp:table styleClass="address-table">
							<xp:tr>
								<xp:td style="width:40%">
									<xp:label
										value="${langBean.labelSerialNo}:" id="serialLabel"
										for="seriaslNbr">
									</xp:label>
									<xp:label
										rendered="#{javascript:currentDocument.isEditable()}"
										id="label3">
										<span
											class="glyphicon glyphicon-asterisk icon-required"
											aria-hidden="true">
										</span>
									</xp:label>
								</xp:td>
								<xp:td>
									<xp:inputText
										value="#{javascript:sessionScope.mhpSerial}" id="serialNumber"
										required="true" readonly="true">
										<xp:this.validators>
											<xp:validateRequired
												message="${langBean.labelSerialNo} ${langBean.msgIsRequired}">
											</xp:validateRequired>
										</xp:this.validators>

									</xp:inputText>
									<xp:message id="serialMsg"
										for="serialNumber">
									</xp:message>
								</xp:td>
							</xp:tr>
							<xp:tr>
								<xp:td style="width:40%">
									<xp:label
										value="${langBean.labelModelNbr}:" id="labelModelNbr"
										for="modelNbr">
									</xp:label>
									&#160;&#160;
									<xp:button
										value="#{langBean.btnPopulateModel}" id="button1"
										styleClass="btn btn-primary">

										<xp:eventHandler event="onclick"
											submit="true" refreshMode="complete" id="eventHandler1">
											<xp:this.action><![CDATA[#{javascript:var srlNbr = getComponent("serialNumber").getValue();
var region = sessionScope.Region;
var table = configBean.Schema_Americas_History + configBean.JdbcTable_04;
if (srlNbr==null){
		alert("Serial number needed")
}else{
	var modelNbr = jdeBean.getModelNbrData(srlNbr,region,table);
	getComponent("modelNbr").setValue(modelNbr)
	acctNbr = jdeBean.getAcctNbr(srlNbr, region)
	dBar.info("account Nbr for " + srlNbr + " is "+acctNbr)
	//need to get information regarding the dealer that attachment 
	//was originally shipped to
	/*
	DealerNameField
	DealerAddressField
	DealerCityField
	DealerStateField
	DealerAddressZip
	DealerCountryField
	*/
	returnList = jdeBean.getAcctDetails(acctNbr, region);
	dBar.info("returnList.getCustName()= "+returnList.getCustName());
	dBar.info("values are:" + returnList.getCustName() + ":["
								+ returnList.getAcctType() + "]"
								+ returnList.getCustLocation()+ "[1: "
								+ returnList.getAddress1()+"] 2: "
								+ returnList.getAddress2()+"[3:"
								+ returnList.getAddress3()+"]"
								+ returnList.getCustCity()
								+ returnList.getCustState()
								+ returnList.getCustZip()
								+ "  CUST COUNTRY CODE  "
								+ returnList.getCustCountryCode());
	
	if (returnList.getCustName() == null){
		getComponent("DealerNameField").setValue("Dealer not found");
	}else{
		//need to bring all addresses together
		var dealerAddress
		if(returnList.getAddress2().trim() == "" + returnList.getAddress3().trim()==""){
			dealerAddress = returnList.getAddress1();
		}else if(returnList.getAddress3().trim()==""){
			dealerAddress = returnList.getAddress1() +", "+ returnList.getAddress2();
		} else {
			dealerAddress = returnList.getAddress1() +", "+ returnList.getAddress2() +", "+ returnList.getAddress3();
		}
		getComponent("DealerNameField").setValue(returnList.getCustName());
		getComponent("DealerAddressField").setValue(dealerAddress);
		getComponent("DealerCityField").setValue(returnList.getCustCity());
		getComponent("DealerStateField").setValue(returnList.getCustState());
		getComponent("DealerAddressZip").setValue(returnList.getCustZip());
		getComponent("DealerCountryField").setValue(returnList.getCustCountryCode());
	}
}
	}]]></xp:this.action>
										</xp:eventHandler>
									</xp:button>
								</xp:td>
								<xp:td>
									<xp:inputText
										value="#{javascript:sessionScope.mhpItem}" id="modelNbr"
										required="false" readonly="true">
									</xp:inputText>
								</xp:td>
							</xp:tr>
							<xp:tr>
								<xp:td>
									<xp:label
										value="${langBean.labelAddressIdentifier}:"
										id="addressIdentifier_Label1" for="addressIdentifier1">
									</xp:label></xp:td>
								<xp:td>
									<xp:inputText
										value="#{document1.attachmentIdentifier}"
										id="attachmentIdentifier">
									</xp:inputText>
									</xp:td>
							</xp:tr>
							<xp:tr>
								<xp:td>
									<xp:label
										value="${langBean.labelInstallationDate}: "
										id="installationDate_Label1" for="installationDate">
									</xp:label>
								</xp:td>
								<xp:td>
									<xp:inputText
										value="#{document1.installationDate}" id="installationDate">
										<xp:dateTimeHelper
											id="dateTimeHelper1">
										</xp:dateTimeHelper>
										
									<xp:this.converter><xp:convertDateTime type="date" dateStyle="short"></xp:convertDateTime></xp:this.converter></xp:inputText>
								</xp:td>
							</xp:tr>
							
							<xp:tr>
								<xp:td rendered="false"></xp:td>
								<xp:td rendered="false">
									<xp:inputText
										value="#{document1.icon}" id="icon" rendered="false">
									</xp:inputText>
								</xp:td>
							</xp:tr>
						</xp:table>
						<br></br>
						<xp:table>
							<xp:panel tagName="th" styleClass="tableHeading">
								<xp:this.attrs>
									<xp:attr name="colspan" value="2">
									</xp:attr>
								</xp:this.attrs>
								<xp:text value="${langBean.labelOriginalDealer}" id="computedField1">
								</xp:text>
							</xp:panel>
						</xp:table>
						<br></br>
						<xp:table>
								<div class="form-group">
									<div class="row">
										<div class="col-sm-9">
												<xp:inputText id="DealerNameField"
													value="#{document1.dealerName}" readonly="true">
												</xp:inputText>
												<xp:br></xp:br>
												<xp:inputText id="DealerAddressField"
													value="#{document1.dealerAddress}" readonly="true">
												</xp:inputText>
												<xp:inputText id="DealerCityField" value="#{document1.dealerCity}" readonly="true">
												</xp:inputText>
												&#160;
												<xp:inputText id="DealerStateField" value="#{document1.dealerState}" readonly="true">
												</xp:inputText>
												&#160;&#160;
												<xp:inputText id="DealerAddressZip" value="#{document1.dealerZip}" readonly="true">
												</xp:inputText>
												<xp:br></xp:br>
												<xp:inputText id="DealerCountryField"
													value="#{document1.dealerCountry}" readonly="true">
												</xp:inputText>
										</div>
									</div>
								</div>
							<xp:panel>
							</xp:panel>
						</xp:table>

						<xp:br></xp:br>
					</xp:panel>
				</xp:panel>
			</xp:panel>
		</xp:panel>
	</xc:ccLayout>
	<xp:this.navigationRules>
		<xp:navigationRule outcome="xsp-success"
			viewId="/MyProfileAttachmentsView.xsp"></xp:navigationRule>
	</xp:this.navigationRules>
</xp:view>